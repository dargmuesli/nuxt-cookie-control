name: CI

on:
  pull_request:
  push:
    branches:
      - alpha
      - beta
      - master
      - renovate/**

jobs:
  prepare_jobs:
    name: 'Prepare: job optimization'
    runs-on: ubuntu-latest
    outputs:
      pr_found: ${{ steps.pr.outputs.pr_found }}
    steps:
      - name: Get current PR
        id: pr
        uses: 8BitJonny/gh-get-current-pr@2.2.0
        with:
          filterOutClosed: true
          sha: ${{ github.event.pull_request.head.sha }}
  build:
    needs: prepare_jobs
    if: needs.prepare_jobs.outputs.pr_found == 'false' || github.event_name == 'pull_request'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node: ['18','20']
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Setup pnpm
        run: corepack enable

      - name: checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/pnpm-lock.yaml')) }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Lint
        run: pnpm lint
  release-semantic:
    needs: build
    name: Release (semantic)
    uses: dargmuesli/github-actions/.github/workflows/release-semantic.yml@0.43.1
    permissions:
      contents: write
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
